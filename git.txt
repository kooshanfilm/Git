Github:

	git init:
		initializing the git

	ls -la .git/

	git add .
	git commit -m "my first commit"

	git log >> gives you all the commeits
		git log -n1
		git log --since 11-12-2012

	Note:
		git add file.txt >> will add to stating index
		git commit file.txt >> will add to repo
	GitHub uses SHA-1

	git diff:
		will see the diff of a new changed files

	git diff --staged :
		will see the diff of staging

	how to rename and handle changes is git:
		we have t2.txt
		rename t2.txt to t3.txt
		git status:
			dleted t2.txt
			new file t3.txt
		git add t3.txt
		git rm t2.txt
		git status:
			renamed:    t2.txt -> t3.txt
	how to commit directly to git:
		git commit -a
		and with message:
			git commit -am "email"

	how to undo:
		git checkout -- file_name.txt

	how to undo from staging index:
		git reset -- head file_name

	how to relece and fixing file:
		git commit --amend -m "amendign file"

	revert to specific commit:
		git checkout b99ee06436c88abd6c8 -- file_name.txt

	How to unstage a commit:
		git reset head file_name.txt

	soft reset:
		git reset -- soft commit <<
			soft reast will put back the change into
			the staging enviroment

	mixed reset:
		git reset --mixed commit_number
			will put back the changes into
			working enviromet

	Hard:
		any change will be same as the repo
		any change will be destoryed
	Soft:
		any change will go back to staging
	Mixed:
		any change will go back to working

	how to get ride of unsed files: remember you should add a new files
		git clean:
			git clean -i
				remember if its staging directory nothing will change

	how to ignore certain files:
		nano sudo .gitignore
			will create a .gitigone file and then iside of the file
			you will go and add your original file
			example:
			cd desktop\test\nano .gitigonore
			nano test.txt
			nano .gitigonre
				test.txt

	but if you already commite the file and
	starting now you don't want this to be tracked:
		git rm --cashed temp2.txt

	git log:
		git log --oneline
		git log --author ='sam'
		git log --graph

	looking at one commit changes:
		git show commit

	------new branch-------
	branche 3





